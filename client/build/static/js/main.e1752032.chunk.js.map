{"version":3,"sources":["img/logo.jpg","pages/Home.js","pages/SignInWidget.js","pages/Login.js","utils/API.js","components/RecipeResult.js","components/Results.js","components/SearchForm.js","components/Nav.js","pages/Recipes.js","AppWithRouterAccess.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","withOktaAuth","props","login","bind","logout","this","authService","authState","isPending","button","isAuthenticated","onClick","to","Component","SignInWidget","el","ReactDOM","findDOMNode","widget","OktaSignIn","baseUrl","logo","Image","renderEl","onSuccess","onError","remove","res","status","redirect","sessionToken","session","token","err","console","log","pathname","title","axios","post","recipeData","id","delete","RecipeResult","handleSaveClick","evt","setState","saved","ingredients","health","diet","cuisineType","mealType","dishType","calories","time","excluded","img","API","then","response","catch","state","deleted","handleDeleteClick","preventDefault","Router","dispatch","location","className","style","display","src","smallThumbnail","thumbnail","alt","React","Result","path","map","recipe","recipeInfo","Info","imageLinks","key","savedRecipe","length","SearchForm","htmlFor","form","type","name","onChange","handleFormChange","placeholder","required","handleSearchClick","Navbar","data-toggle","data-target","Recipes","currentUsername","currentUserEmail","recipeInput","idToken","JSON","parse","localStorage","getItem","claims","email","currentUserName","change","target","value","event","data","Nav","Results","match","withRouter","onAuthRequired","history","push","issuer","clientId","redirectUri","window","origin","exact","component","Home","render","LoginCallback","App","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","document","getElementById","URL","process","addEventListener","fetch","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e1752032.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.f02baa80.jpg\";","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withOktaAuth } from '@okta/okta-react';\n\nexport default withOktaAuth(class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n  }\n\n  async login() {\n    this.props.authService.login('/Recipes');\n  }\n\n  async logout() {\n    this.props.authService.logout('/');\n  }\n\n  render() {\n    if (this.props.authState.isPending) return null;\n\n    const button = this.props.authState.isAuthenticated ?\n      <button onClick={this.logout}>Logout</button> :\n      <button onClick={this.login}>Login</button>;\n\n    return (\n      <div>\n        <Link to='/'>Home</Link><br />\n        <Link to='/Recipes'>Recipes</Link><br />\n        {button}\n      </div>\n    );\n  }\n});\n\n//noahsoukupraesch@gmail.com","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport OktaSignIn from '@okta/okta-signin-widget';\nimport '@okta/okta-signin-widget/dist/css/okta-sign-in.min.css';\nimport Image from '../img/logo.jpg'\n// import '@okta/okta-signin-widget/dist/css/okta-theme.css';\n\nclass SignInWidget extends Component {\n    componentDidMount() {\n        const el = ReactDOM.findDOMNode(this);\n        this.widget = new OktaSignIn({\n            baseUrl: this.props.baseUrl,\n            logo: Image\n        });\n        this.widget.renderEl({ el }, this.props.onSuccess, this.props.onError);\n    }\n\n    componentWillUnmount() {\n        this.widget.remove();\n    }\n\n    render() {\n        return <div />;\n    }\n}\n\nexport default SignInWidget;","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport OktaSignInWidget from './SignInWidget';\nimport { withOktaAuth } from '@okta/okta-react';\n\nexport default withOktaAuth(class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.onSuccess = this.onSuccess.bind(this);\n    this.onError = this.onError.bind(this);\n  }\n\n  onSuccess(res) {\n    if (res.status === 'SUCCESS') {\n      return this.props.authService.redirect({\n        sessionToken: res.session.token\n      });\n    } else {\n      // The user can be in another authentication state that requires further action.\n      // For more information about these states, see:\n      //   https://github.com/okta/okta-signin-widget#rendereloptions-success-error\n    }\n  }\n\n  onError(err) {\n    console.log('error logging in', err);\n  }\n\n  render() {\n    if (this.props.authState.isPending) return null;\n    return this.props.authState.isAuthenticated ?\n      <Redirect to={{ pathname: '/' }} /> :\n      <OktaSignInWidget\n        baseUrl={this.props.baseUrl}\n        onSuccess={this.onSuccess}\n        onError={this.onError} />;\n  }\n});","import axios from \"axios\";\n\nexport default {\n    getRecipe: () => {\n        return axios.get(\"/api/recipe\");\n    },\n    searchRecipe: (title) => {\n        return axios.post(\"/search\", {title: title});\n    },\n    addRecipe: (recipeData) => {\n        return axios.post(\"/api/recipe\", recipeData);\n    },\n    deleteRecipe: (id) => {\n        return axios.delete(`/api/recipe/${id}`);\n    },\n};","import React from \"react\";\nimport API from \"../utils/API\";\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nclass RecipeResult extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      saved: false,\n      deleted: false,\n    };\n    this.handleSaveClick = this.handleSaveClick.bind(this);\n    this.handleDeleteClick = this.handleDeleteClick.bind(this);\n  }\n\n  handleSaveClick = function (evt) {\n    this.setState({saved: true});\n    const recipeData = {\n      ingredients: this.props.ingredients,\n      health: this.props.health,\n      diet: this.props.diet,\n      cuisineType: this.props.cuisineType,\n      mealType: this.props.mealType,\n      dishType: this.props.dishType,\n      calories: this.props.calories,\n      time: this.props.time,\n      excluded: this.props.excluded,\n      img: this.props.img,\n    };\n    API.addRecipe(recipeData)\n      .then((response) => {\n        console.log(response);\n      })\n      .catch((err) => {\n        console.log(\"Database error\" + err);\n      });\n  };\n\n  handleDeleteClick(evt) {\n    this.setState({deleted: true});\n    evt.preventDefault();\n    API.deleteRecipe(this.props.id)\n      .then((response) => {\n        console.log(response);\n        Router.dispatch(this.props.location, null);\n      })\n      .catch((err) => {\n        console.log(\"Delete error\" + err);\n      });\n  }\n\n  render() {\n    return (\n      <div\n        className=\"recipeResult\"\n        id={this.props.id ? this.props.id : null}\n        style={{display: this.state.deleted ? \"none\" : \"block\"}}\n      >\n        <div className=\"row\">\n          <div className=\"aboutRecipe\">\n            <h4>{this.props.cuisineType}</h4>\n          </div>\n        </div>\n        <div className=\"row\">\n          {this.props.img ? (\n            <img\n              src={\n                this.props.img.smallThumbnail\n                  ? this.props.img.smallThumbnail\n                  : this.props.img.thumbnail\n                  ? this.props.img.thumbnail\n                  : \"\"\n              }\n              alt=\"recipe cover\"\n            />\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RecipeResult;\n","import React from \"react\";\nimport RecipeResult from \"./RecipeResult\";\n\nfunction Result(props) {\n    if(props.path === \"/\") {\n        return (\n            <div id=\"results\">\n                <h3>Results Found</h3>\n                {props.recipeData.map((recipe) => {\n                    const recipeInfo = recipe.Info;\n                    return<RecipeResult\n                    ingredients= {recipeInfo.ingredients}\n                    health= {recipeInfo.health}\n                    diet= {recipeInfo.diet}\n                    cuisineType= {recipeInfo.cuisineType}\n                    mealType= {recipeInfo.mealType}\n                    dishType= {recipeInfo.dishType}\n                    calories= {recipeInfo.calories}\n                    time = {recipeInfo.time}\n                    excluded = {recipeInfo.excluded}\n                    img= {recipeInfo.imageLinks}\n                    path= {props.path}\n                    key= {recipe.id} />\n                })}\n            </div>\n        );\n    } else if (props.path === \"/saved\") {\n        if(props.savedRecipe.length > 0 ) {\n            return (\n                <div id=\"resultContainer\">\n                    <h3>Saved Recipes</h3>\n                    {props.savedRecipe.map((recipeInfo) => {\n                        return <RecipeResult\n                        ingredients= {recipeInfo.ingredients}\n                        health= {recipeInfo.health}\n                        diet= {recipeInfo.diet}\n                        cuisineType= {recipeInfo.cuisineType}\n                        mealType= {recipeInfo.mealType}\n                        dishType= {recipeInfo.dishType}\n                        calories= {recipeInfo.calories}\n                        time = {recipeInfo.time}\n                        excluded = {recipeInfo.excluded}\n                        img= {recipeInfo.imageLinks}\n                        path= {props.path}\n                        key= {recipeInfo.id} />\n                    })}\n                </div>\n            );\n        } else {\n            return(\n                <div id=\"resultContainer\">\n                    <h3>Saved Recipes</h3>\n                    <p>No Saved Recipe</p>\n                </div>\n            );\n        }\n    }\n}\n\nexport default Result;","import React from \"react\";\n\nfunction SearchForm(props) {\n    return (\n        <div id =\"searchContainer\">\n            <h3>Recipe Search</h3>\n            <form id=\"recipeSearch\">\n            <label htmlFor=\"recipeInput\" form=\"recipeSearch\">\n                Type in your favorite recipe:\n            </label>\n            <br></br>\n            <input type=\"text\" \n            name=\"recipeInput\" \n            form=\"recipeSearch\"\n            onChange={(evt) => props.handleFormChange(evt)}\n            placeholder=\"Recipe\"\n            required />\n            <br></br>\n            <button type=\"submit\" onClick={(evt) => props.handleSearchClick(evt)}>Search</button>\n            </form>\n        </div>\n    );\n}\n\nexport default SearchForm;","// import React from \"react\";\n// import { Link } from \"react-router-dom\";\n// import { MDBBtn } from \"mdbreact\";\n\n// function Nav() {\n//   return (\n//     <nav className=\"mainNav\">\n//       <ul>\n//         <li>\n//           <MDBBtn href=\"/\">Log Out</MDBBtn>\n//         </li>\n//         <br></br>\n//         <li>\n//           <MDBBtn href=\"/login\">Login</MDBBtn>\n//         </li>\n//         <br></br>\n//         <li>\n//           <MDBBtn href=\"/signup\">Sign Up</MDBBtn>\n//         </li>\n//         <br></br>\n//         <li>\n//           {/* <Link\n//             className=\"link\"\n//             activeClass=\"active\"\n//             to=\"contacts\"\n//             spy={true}\n//             smooth={true}\n//             offset={-70}\n//             duration={500}\n//           >\n//             Contact Us\n//           </Link> */}\n//         </li>\n//       </ul>\n//     </nav>\n//   );\n// }\n\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\n\nclass Navbar extends Component {\n  render() {\n\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark mb-4\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            Gourmet Recipes\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarNav\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/\">\n                  Home\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/login\">\n                  Newsfeed\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport API from \"../utils/API\";\nimport Results from \"../components/Results\";\nimport SearchForm from \"../components/SearchForm\";\nimport Nav from \"../components/Nav\"\n\nclass Recipes extends React.Component {\n    state = {\n        currentUsername: '',\n        currentUserEmail: ''\n    }\n    componentDidMount() {\n        const idToken = JSON.parse(localStorage.getItem('okta-token-storage'));\n        this.setState({\n            currentUserEmail: idToken.idToken.claims.email,\n            currentUserName: idToken.idToken.claims.name\n        });\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            recipeInput: \"\",\n            recipeData: []\n        }\n        this.handleSearchClick = this.handleSearchClick.bind(this);\n        this.handleFormChange = this.handleFormChange.bind(this);\n    }\n\n    handleFormChange(change) {\n        change.preventDefault();\n        this.setState({ recipeInput: change.target.value })\n    }\n\n    handleSearchClick(event) {\n        event.preventDefault();\n        API.searchRecipe(this.state.recipeInput)\n            .then((response) => {\n                this.setState({ recipeData: response.data });\n                this.setState({ recipeInput: \"\" });\n            })\n    };\n\n    render() {\n        const { currentUserEmail, currentUserName } = this.state;\n\n        return (\n            <>\n                <Nav />\n                <div>\n                    <h1>Welcome {currentUserName}</h1>\n                    <p>Email: {currentUserEmail}</p>\n                    <p>You have reached your news feed! Search your recipe!</p>\n                </div>\n                <SearchForm handleFormChange={this.handleFormChange} handleSearchClick={this.handleSearchClick} />\n                {\n                    (this.state.recipeData.length > 0) ?\n                        <Results recipeData={this.state.recipeData} path={this.props.match.path} /> : null\n                }\n            </ >\n        );\n    }\n}\n\nexport default Recipes;","import React, { Component } from 'react';\nimport { Route, withRouter } from 'react-router-dom';\nimport { Security, SecureRoute, LoginCallback } from '@okta/okta-react';\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Recipes from './pages/Recipes';\n\nexport default withRouter(class AppWithRouterAccess extends Component {\n    constructor(props) {\n        super(props);\n        this.onAuthRequired = this.onAuthRequired.bind(this);\n    }\n\n    onAuthRequired() {\n        this.props.history.push('/login')\n    }\n\n    render() {\n\n        // Note: If your app is configured to use the Implicit Flow \n        // instead of the Authorization Code with Proof of Code Key Exchange (PKCE)\n        // you will need to add the below property to what is passed to <Security>\n        //\n        // pkce={false}\n\n        return (\n            <Security issuer='https://dev-621097.okta.com/oauth2/default'\n                clientId='0oa10z2ywmdRqHeOZ4x7'\n                redirectUri={window.location.origin + '/implicit/callback'}\n                onAuthRequired={this.onAuthRequired} >\n                <Route path='/' exact={true} component={Home} />\n                <SecureRoute path='/Recipes' component={Recipes} />\n                <Route path='/login' render={() => <Login baseUrl='https://dev-621097.okta.com' />} />\n                <Route path='/implicit/callback' component={LoginCallback} />\n            </Security>\n        );\n    }\n});\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport AppWithRouterAccess from './AppWithRouterAccess';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <AppWithRouterAccess />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//last used\n// import React, { Component } from 'react';\n// import { BrowserRouter as Router, Route, withRouter } from 'react-router-dom';\n// import { Security, SecureRoute, ImplicitCallback } from '@okta/okta-react';\n// import Navbar from './components/Nav';\n// import Home from './pages/Home';\n// import Recipes from './pages/Recipes';\n// import Login from './pages/Login';\n\n// import './App.css';\n\n// function onAuthRequired({ history }) {\n//   history.push('./pages/login');\n// }\n\n// class App extends Component {\n//   render() {\n//     return (\n//       <Router>\n//         <Security\n//           issuer=\"https://dev-409495.oktapreview.com/oauth2/default\"\n//           client_id=\"0oafhkg1yupTnPW9z0h7\"\n//           redirect_uri={window.location.origin + '/implicit/callback'}\n//           onAuthRequired={onAuthRequired}\n//         >\n//           <div className=\"App\">\n//             <Navbar />\n//             <div className=\"container\">\n//               <Route path=\"/\" exact={true} component={Home} />\n//               <SecureRoute path=\"/Recipes\" exact={true} component={Recipes} />\n//               <Route\n//                 path=\"/login\"\n//                 render={() => (\n//                   <Login baseUrl=\"https://dev-409495.oktapreview.com\" />\n//                 )}\n//               />\n//               <Route path=\"/implicit/callback\" component={ImplicitCallback} />\n//             </div>\n//           </div>\n//         </Security>\n//       </Router>\n//     );\n//   }\n// }\n\n// export default withRouter(App);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { Component } from \"react\";\n// import logo from \"./logo.svg\";\n// import \"./App.css\";\n// import stylesheets from './components/styles';\n// import Axios from 'axios'\n// function App() {\n//   const url =  'https://api.edamam.com/search?q=chicken&app_id=${APP_ID}&app_key=${APP_KEY}';\n//   const APP_ID = \"1b660772\";\n//   const YOUR_APP_KEY =\n//   \"8b4a7a21e724774796e8f3be6a73493d\";\n//   const getData =  async ()=> {\n//     const result = await Axios.get(url);\n//     console.log(result)\n//   }\n\n\n// import stylesheets from './components/styles';\n\n// class App extends Component {\n//   render() {\n//     return (\n//       <Router>\n//         {/* <Security issuer='https://dev-590220.okta.com/oauth2/default'\n//           clientId='0oa10lk5s61UBUzGH4x7'\n//           redirectUri={window.location.origin + '/implicit/callback'}\n//           onAuthRequired={onAuthRequired} > */}\n//         {/* <Route path='/' exact={true} component={Home} />\n//           <Route path='/Recipes' component={Recipes} />\n//           <Route path='/login' render={() => <Login baseUrl='https://dev-590220.okta.com' />} />\n//           <Route path='/implicit/callback' component={LoginCallback} />\n//           <div>\n//             <Nav />\n//             <Header />\n//             <Switch>\n//               <Route exact path=\"/\" component={Home} />\n//               <Route path=\"/login\" component={Login} />\n//               <Route path=\"/signup\" component={SignUp} />\n//               <Route path=\"/recipes\" component={Recipes} />\n//             </Switch>\n//             <Contacts />\n//           </div> */}\n//         <div className=\"App\">\n//           <Nav />\n//           <div className=\"container\">\n//             <Route path=\"/\" exact={true} component={Home} />\n//             <SecureRoute path=\"/Recipes\" exact={true} component={Recipes} />\n//             <Route\n//               path=\"/login\"\n//               render={() => (\n//                 <Login baseUrl=\"https://dev-590220.okta.com\" />\n//               )}\n//             />\n//             <Route path=\"/implicit/callback\" component={LoginCallback} />\n//           </div>\n//         </div>\n//         </Security>\n//       </Router >\n//     );\n//   }\n// }\n\n\n///sdlkjhgjh\n// class App extends Component {\n//   render() {\n//     return (\n//       <Router>\n//         <Security\n//           issuer=\"https://dev-409495.oktapreview.com/oauth2/default\"\n//           client_id=\"0oafhkg1yupTnPW9z0h7\"\n//           redirect_uri={window.location.origin + '/implicit/callback'}\n//           onAuthRequired={onAuthRequired}\n//         >\n//           <div className=\"App\">\n//             <Nav />\n//             <div className=\"container\">\n//               <Route path=\"/\" exact={true} component={Home} />\n//               <SecureRoute path=\"/Recipesf\" exact={true} component={Recipes} />\n//               <Route\n//                 path=\"/login\"\n//                 render={() => (\n//                   <Login baseUrl=\"https://dev-409495.oktapreview.com\" />\n//                 )}\n//               />\n//               <Route path=\"/implicit/callback\" component={ImplicitCallback} />\n//             </div>\n//           </div>\n//         </Security>\n//       </Router>\n//     );\n//   }\n// }\n\n// export default App;\n\n\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}